{
	"patterns": [{
    "comment": "caption",
    "name": "comment",
    "match": "^[^ ].* @$",
    "captures": {"0": {"patterns": [{"include": "#header-end"}]}}
  },

  {
    "comment": "headers"
  }, {
    "name": "keyword",
    "match": "^[^ ].* \\.$",
    "captures": {"0": {"patterns": [{"include": "#header-end"}]}}
  }, {
    "name": "support.class",
    "match": "^ {2}[^ ].* \\.$",
    "captures": {"0": {"patterns": [{"include": "#header-end"}]}}
  }, {
    "name": "support.type.property-name",
    "match": "^ {4}[^ ].* \\.$",
    "captures": {"0": {"patterns": [{"include": "#header-end"}]}}
  }, {
    "name": "support.variable",
    "match": "^ {6}[^ ].* \\.$",
    "captures": {"0": {"patterns": [{"include": "#header-end"}]}}
  }, {
    "name": "support.function",
    "match": "^ {8}[^ ].* \\.$",
    "captures": {"0": {"patterns": [{"include": "#header-end"}]}}
  }, {
    "name": "constant.numeric",
    "match": "^ {10}[^ ].* \\.$",
    "captures": {"0": {"patterns": [{"include": "#header-end"}]}}
  },

  {
    "comment": "paragraph with code block start",
    "match": "^ *([\\.?!] )*\\|($| .+$|\\{[^\\}]*\\}$|\\{[^\\}]*\\} .+$)",
    "captures": {
      "0": {"patterns": [{"include": "#code-block"}]},
      "1": {"name": "punctuation"}
    }
  },

  {
    "comment": "paragraph start",
    "match": "^ *([\\.?!]) (.+)",
    "captures": {
      "1": {"name": "punctuation"},
      "2": {
        "patterns": [{
          "include": "#http-link"
        }, {
          "comment": "before 'special', ex |{lng:foo}bar| is code",
          "include": "#code-inline"
        }, {
          "include": "#wikiword"
        }, {
          "include": "#accent"
        }, {
          "include": "#special"
        }]
      }
    }
  },

  {
    "comment": "[http://foo|",
    "include": "#http-link"
  },

  {
    "comment": "block code sample, spaces followed by '|' and space",
    "match": "^ *\\|($| .+$|\\{[^\\}]*\\} .+$)",
    "captures": {
      "0": {"patterns": [{"include": "#code-block"}]}
    }
  },

  {
    "comment": "inline code sample, |{descr}code|; before 'special'",
    "include": "#code-inline"
  },

  {
    "comment": "text between '[' and ']' without adjasted spaces",
    "include": "#wikiword"
  },

  {
    "comment": "text between '`' without adjasted spaces",
    "include": "#accent"
  },

  {
    "comment": "text between '|' and '|' without adjasted spaces",
    "include": "#special"
  }],

  "repository": {
    "header-end": {
      "patterns": [{
        "comment": "plain header, ex 'foo .'",
        "match": "[^ ] (\\.|@)$",
        "captures": {
          "1": {"name": "punctuation.definition.tag"}
        }
      },{
        "comment": "header that is itself a link, ex 'foo[] .', no spaces",
        "match": "[^ ](\\[\\]) (\\.|@)$",
        "captures": {
          "1": {"name": "meta.link"},
          "2": {"name": "punctuation.definition.tag"}
        }
      }, {
        "comment": "header with link, ex 'foo [bar] .', space separated",
        "match": "[^ ] +(\\[.+\\]) (\\.|@)$",
        "captures": {
          "1": {
            "name": "punctuation.definition.tag",
            "patterns": [{
              "match": "\\[(.+)\\]",
              "captures": {
                "1": {"name": "meta.link"}
              }
            }]
          },
          "2": {"name": "punctuation.definition.tag"}
        }
      }]
    },

    "special": {
      "patterns": [{
        "comment": "text like ||foo||",
        "match": "\\|([^ ]+)\\|",
        "name": "punctuation.definition.tag",
        "captures": {"1": {"name": "string"}}
      }, {
        "comment": "text like |foo bar baz|",
        "match": "\\|([^ \\|][^\\|]*[^ \\|])\\|",
        "name": "punctuation.definition.tag",
        "captures": {"1": {"name": "string"}}
      }]
    },

    "accent": {
      "patterns": [{
        "comment": "`foo bar baz`",
        "match": "`([^ `]?)`|`([^ `][^`]*[^ `])`",
        "name": "punctuation.definition.tag",
        "captures": {
          "1": {"name": "accent.xi"},
          "2": {"name": "accent.xi"}
        }
      }]
    },

    "wikiword": {
      "patterns": [{
        "comment": "[foo bar baz]",
        "match": "\\[([^ \\]]?)\\]|\\[([^ \\]][^\\]]*[^ \\]])\\]",
        "name": "punctuation.definition.tag",
        "captures": {
          "1": {"name": "meta.link"},
          "2": {"name": "meta.link"}
        }
      }]
    },

    "http-link": {
      "patterns": [{
        "comment": "|http://foo|",
        "match": "\\|(http://[^\\|]+)\\|",
        "name": "punctuation.definition.tag",
        "captures": {"1": {"name": "meta.link"}}
      }, {
        "comment": "|https://foo|",
        "match": "\\|(https://[^\\|]+)\\|",
        "name": "punctuation.definition.tag",
        "captures": {"1": {"name": "meta.link"}}
      }]
    },

    "code-block": {
      "comment": "block code sample, spaces followed by '|' and space",
      "patterns": [{
        "match": "^ *([\\.?!] )*(\\|)(\\{[^\\}]*\\})*(.*)$",
        "captures": {
          "1": {"name": "punctuation"},
          "2": {"name": "punctuation.definition.tag"},
          "3": {
            "patterns": [{
              "match": "\\{[^\\}]*\\}",
              "name": "punctuation.definition.tag"
            }]
          },
          "4": {"name": "punctuation"}
        }
      }]
    },

    "code-inline": {
      "patterns": [{
        "comment": "inline code sample, |{descr}foo|bar|",
        "match": "\\|\\{[^\\}]*\\}([^ ]*)\\|",
        "name": "punctuation.definition.tag",
        "captures": {
          "1": {"name": "punctuation"}
        }
      }, {
        "comment": "inline code sample, |{descr}foo bar baz|",
        "match": "\\|\\{[^\\}]*\\}([^\\|]*)\\|",
        "name": "punctuation.definition.tag",
        "captures": {
          "1": {"name": "punctuation"}
        }
      }]
    }
  },

	"scopeName": "text.xi"
}
